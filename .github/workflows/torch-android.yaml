name: torch-android

on:
  push:
    branches:
      - torch2

  workflow_dispatch:
    inputs:
      version:
        description: "Version information (e.g., 2.3.1)"
        required: true

env:
  TORCH_VERSION:
    |- # Enter release tag name or version name in workflow_dispatch. Appropriate version if not specified
    ${{ github.event.release.tag_name || github.event.inputs.version || '2.3.1' }}

jobs:
  torch-android:
    name: android ${{ matrix.shared_lib }} ${{ matrix.abi }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8"]
        shared_lib: [ON, OFF]
        abi: [arm64-v8a, armeabi-v7a, x86, x86_64]

    steps:
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.os }}-${{ matrix.shared_lib }}-${{ matrix.abi }}

      - name: Download PyTorch ${{ env.TORCH_VERSION }}
        if: steps.cache-build-result.outputs.cache-hit != 'true'
        shell: bash
        run: |
          version=${{ env.TORCH_VERSION }}
          curl -SL -O https://github.com/pytorch/pytorch/releases/download/v$version/pytorch-v$version.tar.gz
          tar xf pytorch-v$version.tar.gz

          mv pytorch-v$version torch-$version

          cd torch-$version

          # To fix the following error
          # https://github.com/csukuangfj/torch-libs/actions/runs/9709473947/job/26798232025#step:5:66
          # /usr/bin/ld: /home/runner/work/torch-libs/torch-libs/build/_deps/torch_libs-src/lib/libtorch_cpu.so: undefined reference to `torch::jit::LEGACY_deserialize(std::shared_ptr<torch::jit::CompilationUnit>, std::shared_ptr<caffe2::serialize::PyTorchStreamReader>, std::optional<c10::Device> const&)'

          sed -i.bak s'|^#if !defined(C10_MOBILE) && !defined(C10_DISABLE_LEGACY_IMPORT)|#if 0|'g ./torch/csrc/jit/serialization/import.cpp

          # To fix the following error
          # https://github.com/csukuangfj/torch-libs/actions/runs/9709473947/job/26798232025#step:5:67
          # /usr/bin/ld: /home/runner/work/torch-libs/torch-libs/build/_deps/torch_libs-src/lib/libtorch_cpu.so: undefined reference to `torch::jit::writeArchiveAndTensors(std::string const&, char const*, unsigned long, std::vector<at::Tensor, std::allocator<at::Tensor> > const&, caffe2::serialize::PyTorchStreamWriter&)'
          sed -i.bak s'|^#ifndef C10_MOBILE|#if 0|'g ./torch/csrc/jit/serialization/pickle.cpp


      - name: Install dependencies
        shell: bash
        run: |
          cd torch-${{ env.TORCH_VERSION }}
          pip install -r ./requirements.txt

          sudo apt-get install -y tree

      - name: Install NDK 21
        shell: bash
        run: |
          # See https://github.com/actions/runner-images/issues/5595
          ANDROID_ROOT=/usr/local/lib/android
          ANDROID_SDK_ROOT=${ANDROID_ROOT}/sdk
          SDKMANAGER=${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager
          echo "y" | $SDKMANAGER "ndk;21.4.7075529"

      - name: Change default NDK to 21
        shell: bash
        run: |
          ANDROID_ROOT=/usr/local/lib/android
          ANDROID_SDK_ROOT=${ANDROID_ROOT}/sdk
          ANDROID_NDK_ROOT=${ANDROID_SDK_ROOT}/ndk-bundle
          ln -sfn $ANDROID_SDK_ROOT/ndk/21.4.7075529 $ANDROID_NDK_ROOT

      - name: Display NDK HOME
        shell: bash
        run: |
          export ANDROID_ROOT=/usr/local/lib/android
          export ANDROID_SDK_ROOT=${ANDROID_ROOT}/sdk
          export ANDROID_NDK_ROOT=${ANDROID_SDK_ROOT}/ndk-bundle
          ln -sfn $ANDROID_SDK_ROOT/ndk/21.4.7075529 $ANDROID_NDK_ROOT

          echo "ANDROID_NDK_LATEST_HOME: ${ANDROID_NDK_LATEST_HOME}"
          ls -lh ${ANDROID_NDK_LATEST_HOME}

      - name: Build ${{ matrix.abi }}
        shell: bash
        run: |
          export ANDROID_ROOT=/usr/local/lib/android
          export ANDROID_SDK_ROOT=${ANDROID_ROOT}/sdk
          export ANDROID_NDK_ROOT=${ANDROID_SDK_ROOT}/ndk-bundle
          ln -sfn $ANDROID_SDK_ROOT/ndk/21.4.7075529 $ANDROID_NDK_ROOT

          export ANDROID_NDK=$ANDROID_SDK_ROOT/ndk/21.4.7075529

          ls -lh $ANDROID_NDK

          export ANDROID_NDK_LATEST_HOME=$ANDROID_NDK

          export CMAKE_CXX_COMPILER_LAUNCHER=ccache
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"

          cd torch-${{ env.TORCH_VERSION }}
          # https://djl.ai/android/pytorch-native/

          sed -i.bak s/USE_VULKAN=ON/USE_VULKAN=OFF/g ./scripts/build_android.sh

          if [[ ${{ matrix.shared_lib }} == ON ]]; then
            sed -i.bak s/BUILD_SHARED_LIBS=OFF/BUILD_SHARED_LIBS=ON/g ./scripts/build_android.sh
          fi

          sed -i.bak s"/Use Vulkan GPU backend\" ON/Use Vulkan GPU backend\" OFF/g" ./CMakeLists.txt

          # For v2.3.0 and v2.3.1. Need to update for later versions of PyTorch
          # disable running gradlew
          sed -i.bak '43,51d' ./scripts/build_pytorch_android.sh

          export BUILD_LITE_INTERPRETER=0

          abi=${{ matrix.abi }}
          ./scripts/build_pytorch_android.sh $abi

      - name: Display ${{ matrix.abi }}
        shell: bash
        run: |
          abi=${{ matrix.abi }}
          cd torch-${{ env.TORCH_VERSION }}
          echo '---build_android_$abi---'
          ls -lh build_android_$abi

          echo "---"
          ls -lh build_android_$abi/install/include

          echo "---install---"
          ls -lh build_android_$abi/install

          echo "---install/include---"
          ls -lh build_android_$abi/install/include

          echo "---install/lib---"
          ls -lh build_android_$abi/install/lib

          echo "---install/share---"
          ls -lh build_android_$abi/install/share
          if [[ ${{ matrix.shared_lib }} == ON ]]; then
            lib_type=shared
          else
            lib_type=static
          fi

          tar cfj ./build_android_${lib_type}_$abi.tar.bz2 ./build_android_$abi

          ls -lh *.tar.bz2

          mv build_android_*.tar.bz2 ../

      - uses: actions/upload-artifact@v4
        with:
          name: torch-android-build-${{ env.TORCH_VERSION }}-${{ matrix.shared_lib }}-${{ matrix.abi }}
          path: ./build_android*.tar.bz2

      - name: Collect results ${{ matrix.abi }}
        shell: bash
        run: |
          abi=${{ matrix.abi }}
          cd torch-${{ env.TORCH_VERSION }}

          if [[ ${{ matrix.shared_lib }} == ON ]]; then
            lib_type=shared
          else
            lib_type=static
          fi

          src=build_android_$abi
          dst=torch-android-${lib_type}-$abi

          mv $src/install $dst
          tar cjf $dst.tar.bz2 $dst

          mv $dst.tar.bz2 ..

          # cd build_android_$abi && zip -r ~/torch-android-$abi.zip install/include lib && cd ..

      - uses: actions/upload-artifact@v4
        with:
          name: torch-android-${{ env.TORCH_VERSION }}-${{ matrix.shared_lib }}-${{ matrix.abi }}
          path: ./torch-android-*.tar.bz2

      - name: Publish to huggingface ${{ matrix.abi }}
        if: steps.cache-build-result.outputs.cache-hit != 'true'
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        uses: nick-fields/retry@v2
        with:
          max_attempts: 20
          timeout_seconds: 200
          shell: bash
          command: |
            git config --global user.email "csukuangfj@gmail.com"
            git config --global user.name "Fangjun Kuang"

            rm -rf huggingface
            export GIT_LFS_SKIP_SMUDGE=1
            export GIT_CLONE_PROTECTION_ACTIVE=false

            ls -lh

            git clone https://huggingface.co/csukuangfj/torch-libs huggingface
            cd huggingface
            git pull

            name=torch-android*.tar.bz2

            cp -v ../$name .

            git status
            git add .
            git commit -m "add $name"
            git push https://csukuangfj:$HF_TOKEN@huggingface.co/csukuangfj/torch-libs main
