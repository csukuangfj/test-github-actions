name: arm

on:
  push:
    branches:
      - master
      - docker

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        python-version: ["3.8"]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm

      - name: Get version
        shell: bash
        run: |
          git clone https://github.com/k2-fsa/sherpa-ncnn
          SHERPA_NCNN_VERSION=$(cat ./sherpa-ncnn/CMakeLists.txt | grep SHERPA_NCNN_VERSION | cut -d " " -f 2 | cut -d '"' -f 2)
          echo "sherpa-ncnn version: $SHERPA_NCNN_VERSION"
          echo SHERPA_NCNN_VERSION=$SHERPA_NCNN_VERSION >> $GITHUB_ENV

          v=${{ matrix.python-version }}
          PYTHON_VERSION=${v/./}
          echo PYTHON_VERSION=$PYTHON_VERSION >> $GITHUB_ENV

      - name: Create dist
        shell: bash
        run: |
          echo "sherpa-ncnn version: $SHERPA_NCNN_VERSION"
          mkdir dist

      - name: Run docker
        uses: addnab/docker-run-action@v3
        with:
            image: balenalib/raspberrypi3-python:${{ matrix.python-version }}-bullseye-build
            options: |
              --platform linux/arm/v7
              --volume ${{ github.workspace }}/dist:/build
            shell: bash
            run: |
              ls
              pip install -i https://www.piwheels.org/simple https://huggingface.co/csukuangfj/sherpa-ncnn-cmake-deps/resolve/main/sherpa_ncnn-2.1.3-cp38-cp38-linux_armv7l.whl
              python3 -c "import sherpa_ncnn; print(sherpa_ncnn.__file__, sherpa_ncnn.__version__); print(dir(sherpa_ncnn)); print(help(sherpa_ncnn))"

      # https://github.com/mshr-h/onnx-dockerfile-for-raspberry-pi/blob/main/3.10-bullseye-build/Dockerfile.arm32v7
      - name: Run docker
        if: false
        uses: addnab/docker-run-action@v3
        with:
            image: balenalib/raspberrypi3-python:${{ matrix.python-version }}-bullseye-build
            options: |
              --platform linux/arm/v7
              --volume ${{ github.workspace }}/dist:/build
            shell: bash
            run: |
              ls
              # Linux 039ac02f532e 6.2.0-1011-azure #11~22.04.1-Ubuntu SMP Wed Aug 23 19:26:19 UTC 2023 armv7l GNU/Linux
              uname -a
              which python3
              id # root
              apt install -qq -y git wget

              wget -qq https://huggingface.co/csukuangfj/sherpa-onnx-cmake-deps/resolve/main/cmake-3.27-for-armv7.tar.bz2
              ls -lh
              tar xvf cmake-3.27-for-armv7.tar.bz2
              ls -lh cmake/data/bin
              chmod +x cmake/data/bin/cmake
              export PATH=$PWD/cmake/data/bin:$PATH

              cmake --version

              git clone https://github.com/k2-fsa/sherpa-ncnn
              cd sherpa-ncnn
              export SHERPA_NCNN_CMAKE_ARGS='-DCMAKE_C_FLAGS="-march=armv7-a -mfloat-abi=hard -mfpu=neon" -DCMAKE_CXX_FLAGS="-march=armv7-a -mfloat-abi=hard -mfpu=neon"'
              python3 setup.py bdist_wheel
              ls -lh dist
              cp -v dist/*.whl /build/

      - name: Show files 
        if: false
        shell: bash
        run: |
          ls -lh dist/

      - name: Upload wheel
        if: false
        uses: actions/upload-artifact@v3
        with:
          name: sherpa_ncnn-${{ env.SHERPA_NCNN_VERSION }}-cp${{ env.PYTHON_VERSION }}-cp${{ env.PYTHON_VERSION }}-linux_armv7l.whl
          path: ./dist/*.whl

      # - name: Install QEMU
      #   shell: bash
      #   run: |
      #     sudo apt update && sudo apt install -y qemu qemu-user-static qemu-user binfmt-support
      #
      # - name: Setup for QEMU
      #   shell: bash
      #   run: |
      #     sudo docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
